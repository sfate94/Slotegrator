"use strict";

var compareSnapshotCommand = function compareSnapshotCommand(defaultScreenshotOptions) {
  var height = process.env.HEIGHT || '1440';
  var width = process.env.WIDTH || '1980'; // Force screenshot resolution to keep consistency of test runs across machines

  Cypress.config('viewportHeight', height);
  Cypress.config('viewportWidth', width);
  Cypress.Commands.add('compareSnapshot', {
    prevSubject: 'optional'
  }, function (subject, name) {
    var testThreshold = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    var specName = Cypress.spec.name;
    var testName = "".concat(specName.replace('.js', ''), "-").concat(name); // Take a screenshot and copy to baseline if it does not exist

    var objToOperateOn = subject ? cy.get(subject) : cy;
    objToOperateOn.screenshot(testName, defaultScreenshotOptions).task('copyScreenshot', {
      testName: testName
    }); // Compare screenshots

    var options = {
      testName: testName,
      testThreshold: testThreshold
    };
    cy.task('compareSnapshotsPlugin', options).then(function (percentage) {
      if (percentage > testThreshold) {
        throw new Error("The image difference percentage ".concat(percentage, " exceeded the threshold: ").concat(testThreshold));
      }
    });
  });
  Cypress.Commands.add('hideElement', {
    prevSubject: 'optional'
  }, function (subject) {
    var hide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

    if (hide) {
      cy.get(subject).invoke('attr', 'style', "display: none;");
    } else {
      cy.get(subject).invoke('attr', 'style', "display: '';");
    }

    return undefined;
  });
};

module.exports = compareSnapshotCommand;